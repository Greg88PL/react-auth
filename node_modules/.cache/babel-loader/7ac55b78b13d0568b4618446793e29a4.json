{"ast":null,"code":"var _jsxFileName = \"/Users/grzegorz/Desktop/Projects/react-auth/src/components/Auth/AuthForm.js\",\n  _s = $RefreshSig$();\nimport { useState, useRef } from \"react\";\nimport classes from \"./AuthForm.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthForm = () => {\n  _s();\n  const emailInputRef = useRef();\n  const passwordInputRef = useRef();\n  const [isLogin, setIsLogin] = useState(true);\n  const switchAuthModeHandler = () => {\n    setIsLogin(prevState => !prevState);\n  };\n  const submitHandler = event => {\n    event.preventDefault();\n    const enteredEmail = emailInputRef.current.value;\n    const enteredPassword = passwordInputRef.current.value;\n\n    // optional: add validation\n\n    if (isLogin) {} else {\n      fetch(\"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyBIgpcDyorng279aD_rFsLS1H5lUPbZnwk\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.auth,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: isLogin ? \"Login\" : \"Sign Up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Your Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          ref: emailInputRef,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Your Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          ref: passwordInputRef,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          children: isLogin ? \"Login\" : \"Create Account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: classes.toggle,\n          onClick: switchAuthModeHandler,\n          children: isLogin ? \"Create new account\" : \"Login with existing account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthForm, \"d5MFzbQ69dYgb5LfYbTwTxIKLCk=\");\n_c = AuthForm;\nexport default AuthForm;\nvar _c;\n$RefreshReg$(_c, \"AuthForm\");","map":{"version":3,"names":["useState","useRef","classes","AuthForm","emailInputRef","passwordInputRef","isLogin","setIsLogin","switchAuthModeHandler","prevState","submitHandler","event","preventDefault","enteredEmail","current","value","enteredPassword","fetch","auth","control","actions","toggle"],"sources":["/Users/grzegorz/Desktop/Projects/react-auth/src/components/Auth/AuthForm.js"],"sourcesContent":["import { useState, useRef } from \"react\";\nimport classes from \"./AuthForm.module.css\";\n\nconst AuthForm = () => {\n  const emailInputRef = useRef();\n  const passwordInputRef = useRef();\n  const [isLogin, setIsLogin] = useState(true);\n\n  const switchAuthModeHandler = () => {\n    setIsLogin((prevState) => !prevState);\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n\n    const enteredEmail = emailInputRef.current.value;\n    const enteredPassword = passwordInputRef.current.value;\n\n    // optional: add validation\n\n    if (isLogin) {\n    } else {\n      fetch(\n        \"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyBIgpcDyorng279aD_rFsLS1H5lUPbZnwk\"\n      );\n    }\n  };\n\n  return (\n    <section className={classes.auth}>\n      <h1>{isLogin ? \"Login\" : \"Sign Up\"}</h1>\n      <form>\n        <div className={classes.control}>\n          <label htmlFor=\"email\">Your Email</label>\n          <input type=\"email\" id=\"email\" ref={emailInputRef} required />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor=\"password\">Your Password</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            ref={passwordInputRef}\n            required\n          />\n        </div>\n        <div className={classes.actions}>\n          <button>{isLogin ? \"Login\" : \"Create Account\"}</button>\n          <button\n            type=\"button\"\n            className={classes.toggle}\n            onClick={switchAuthModeHandler}\n          >\n            {isLogin ? \"Create new account\" : \"Login with existing account\"}\n          </button>\n        </div>\n      </form>\n    </section>\n  );\n};\n\nexport default AuthForm;\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AACxC,OAAOC,OAAO,MAAM,uBAAuB;AAAC;AAE5C,MAAMC,QAAQ,GAAG,MAAM;EAAA;EACrB,MAAMC,aAAa,GAAGH,MAAM,EAAE;EAC9B,MAAMI,gBAAgB,GAAGJ,MAAM,EAAE;EACjC,MAAM,CAACK,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAE5C,MAAMQ,qBAAqB,GAAG,MAAM;IAClCD,UAAU,CAAEE,SAAS,IAAK,CAACA,SAAS,CAAC;EACvC,CAAC;EAED,MAAMC,aAAa,GAAIC,KAAK,IAAK;IAC/BA,KAAK,CAACC,cAAc,EAAE;IAEtB,MAAMC,YAAY,GAAGT,aAAa,CAACU,OAAO,CAACC,KAAK;IAChD,MAAMC,eAAe,GAAGX,gBAAgB,CAACS,OAAO,CAACC,KAAK;;IAEtD;;IAEA,IAAIT,OAAO,EAAE,CACb,CAAC,MAAM;MACLW,KAAK,CACH,uGAAuG,CACxG;IACH;EACF,CAAC;EAED,oBACE;IAAS,SAAS,EAAEf,OAAO,CAACgB,IAAK;IAAA,wBAC/B;MAAA,UAAKZ,OAAO,GAAG,OAAO,GAAG;IAAS;MAAA;MAAA;MAAA;IAAA,QAAM,eACxC;MAAA,wBACE;QAAK,SAAS,EAAEJ,OAAO,CAACiB,OAAQ;QAAA,wBAC9B;UAAO,OAAO,EAAC,OAAO;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAmB,eACzC;UAAO,IAAI,EAAC,OAAO;UAAC,EAAE,EAAC,OAAO;UAAC,GAAG,EAAEf,aAAc;UAAC,QAAQ;QAAA;UAAA;UAAA;UAAA;QAAA,QAAG;MAAA;QAAA;QAAA;QAAA;MAAA,QAC1D,eACN;QAAK,SAAS,EAAEF,OAAO,CAACiB,OAAQ;QAAA,wBAC9B;UAAO,OAAO,EAAC,UAAU;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAsB,eAC/C;UACE,IAAI,EAAC,UAAU;UACf,EAAE,EAAC,UAAU;UACb,GAAG,EAAEd,gBAAiB;UACtB,QAAQ;QAAA;UAAA;UAAA;UAAA;QAAA,QACR;MAAA;QAAA;QAAA;QAAA;MAAA,QACE,eACN;QAAK,SAAS,EAAEH,OAAO,CAACkB,OAAQ;QAAA,wBAC9B;UAAA,UAASd,OAAO,GAAG,OAAO,GAAG;QAAgB;UAAA;UAAA;UAAA;QAAA,QAAU,eACvD;UACE,IAAI,EAAC,QAAQ;UACb,SAAS,EAAEJ,OAAO,CAACmB,MAAO;UAC1B,OAAO,EAAEb,qBAAsB;UAAA,UAE9BF,OAAO,GAAG,oBAAoB,GAAG;QAA6B;UAAA;UAAA;UAAA;QAAA,QACxD;MAAA;QAAA;QAAA;QAAA;MAAA,QACL;IAAA;MAAA;MAAA;MAAA;IAAA,QACD;EAAA;IAAA;IAAA;IAAA;EAAA,QACC;AAEd,CAAC;AAAC,GAvDIH,QAAQ;AAAA,KAARA,QAAQ;AAyDd,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module"}